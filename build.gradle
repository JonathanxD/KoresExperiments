buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0'
    }
}

plugins {
    id 'com.github.hierynomus.license' version '0.11.0'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'com.github.jonathanxd'
version '1.0.0-SNAPSHOT'

// Setup

ext {
    description = "CodeAPI Bytecode Experiments!"
}


apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'org.junit.platform.gradle.plugin'

license {
    header rootProject.file("LICENSE_HEADER")
}

defaultTasks 'licenseFormat', 'build', 'test', 'jar', 'shadowJar'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'com.github.JonathanxD:Kores:4.0.0.45-beta'
    compile 'com.github.JonathanxD.Kores-BytecodeWriter:Kores-BytecodeWriter:4.0.0.36-beta-bytecode'
    compile 'com.github.JonathanxD:JwIUtils:4.15.10'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.1.0'

    testRuntime 'org.junit.platform:junit-platform-launcher:1.1.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
    testRuntime 'org.junit.vintage:junit-vintage-engine:5.1.0'
}

test {
    useJUnit()
}

// Tasks
jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

license {
    String name = project.getName()
    String description = project.ext.description

    ext.name = "$name"
    ext.organization = 'TheRealBuggy/JonathanxD (https://github.com/JonathanxD/ & https://github.com/TheRealBuggy/)'
    ext.description = "$description"
    ext.url = 'https://github.com/JonathanxD/CodeProxy'
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.email = 'jonathan.scripter@programmer.net'

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"

    header rootProject.file('LICENSE_HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}
